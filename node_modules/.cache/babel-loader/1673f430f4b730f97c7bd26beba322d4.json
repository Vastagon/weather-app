{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Code/weather-app/src/components/CurrentWeather.js\",\n    _s = $RefreshSig$();\n\n//If the substring of (10,11) == a space, then use currentTime.substring(surrentTime.length-3)\n//Else use currenttime.length-4\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrentWeather(props) {\n  _s();\n\n  var _props$currentWeather, _props$currentWeather2, _props$currentWeather3, _props$currentWeather4, _props$currentWeather5, _props$currentWeather6;\n\n  const [currentTime, setCurrentTime] = useState((_props$currentWeather = props.currentWeather) === null || _props$currentWeather === void 0 ? void 0 : (_props$currentWeather2 = _props$currentWeather.location) === null || _props$currentWeather2 === void 0 ? void 0 : _props$currentWeather2.localtime);\n  console.log(currentTime);\n  useEffect(() => {\n    if (currentTime != null && currentTime.substring(10, 11) == \" \") {\n      setCurrentTime(currentTime.substring(currentTime.length - 3));\n    } else {\n      setCurrentTime(currentTime.substring(currentTime.length - 4));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-section weather-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"weather-block-title\",\n      children: \"Current Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"weather-time\",\n      children: (_props$currentWeather3 = props.currentWeather) === null || _props$currentWeather3 === void 0 ? void 0 : (_props$currentWeather4 = _props$currentWeather3.location) === null || _props$currentWeather4 === void 0 ? void 0 : _props$currentWeather4.localtime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"farenheit\",\n      children: [Math.round((_props$currentWeather5 = props.currentWeather) === null || _props$currentWeather5 === void 0 ? void 0 : (_props$currentWeather6 = _props$currentWeather5.current) === null || _props$currentWeather6 === void 0 ? void 0 : _props$currentWeather6.temp_f), \"\\u00B0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CurrentWeather, \"VadWdcsO/AJlYFM/BQjf+LN/qak=\");\n\n_c = CurrentWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentWeather\");","map":{"version":3,"sources":["/home/jacob/Code/weather-app/src/components/CurrentWeather.js"],"names":["useState","useEffect","CurrentWeather","props","currentTime","setCurrentTime","currentWeather","location","localtime","console","log","substring","length","Math","round","current","temp_f"],"mappings":";;;AACA;AACA;AAEA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAGA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAAA;;AAAA;;AACzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,0BAACG,KAAK,CAACG,cAAP,oFAAC,sBAAsBC,QAAvB,2DAAC,uBAAgCC,SAAjC,CAA9C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AAEAH,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGG,WAAW,IAAI,IAAf,IAAuBA,WAAW,CAACO,SAAZ,CAAsB,EAAtB,EAAyB,EAAzB,KAAgC,GAA1D,EAA8D;AAC1DN,MAAAA,cAAc,CAACD,WAAW,CAACO,SAAZ,CAAsBP,WAAW,CAACQ,MAAZ,GAAmB,CAAzC,CAAD,CAAd;AAEH,KAHD,MAGK;AACDP,MAAAA,cAAc,CAACD,WAAW,CAACO,SAAZ,CAAsBP,WAAW,CAACQ,MAAZ,GAAmB,CAAzC,CAAD,CAAd;AACH;AAEJ,GARQ,CAAT;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA,0CAA6BT,KAAK,CAACG,cAAnC,qFAA6B,uBAAsBC,QAAnD,2DAA6B,uBAAgCC;AAA7D;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,iBAA2BK,IAAI,CAACC,KAAL,2BAAWX,KAAK,CAACG,cAAjB,qFAAW,uBAAsBS,OAAjC,2DAAW,uBAA+BC,MAA1C,CAA3B,EAA8E,QAA9E;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAvBuBd,c;;KAAAA,c","sourcesContent":["\n//If the substring of (10,11) == a space, then use currentTime.substring(surrentTime.length-3)\n//Else use currenttime.length-4\n\nimport {useState, useEffect} from \"react\"\n\n\nexport default function CurrentWeather(props){\n    const [currentTime, setCurrentTime] = useState(props.currentWeather?.location?.localtime)\n    console.log(currentTime)\n\n    useEffect(() =>{\n        if(currentTime != null && currentTime.substring(10,11) == \" \"){\n            setCurrentTime(currentTime.substring(currentTime.length-3))\n\n        }else{\n            setCurrentTime(currentTime.substring(currentTime.length-4))\n        }        \n          \n    })\n\n\n\n    return(\n        <div className=\"weather-section weather-block\">\n            <h1 className=\"weather-block-title\">Current Weather</h1>\n            <p className=\"weather-time\">{props.currentWeather?.location?.localtime}</p>\n            <h1 className=\"farenheit\">{Math.round(props.currentWeather?.current?.temp_f)}{\"\\u00B0\"}</h1>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}