{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Code/weather-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './index.css';\nimport Navbar from \"./components/Navbar\";\nimport { useState, useRef } from \"react\";\nimport Weather from './components/Weather'; // import listenForOutsideClick from './components/listenForOutsideClick';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [inputData, setInputData] = useState({});\n  const [currentWeather, setCurrentWeather] = useState({});\n  const [loc, setLoc] = useState({\n    loc: \"Arlington\"\n  });\n  const [listOfLoc, setListOfLoc] = useState([]);\n  const [listening, setListening] = useState(false);\n  let apiKey = \"7ab98e97faa64c4d8b4104902222202\";\n  let throwAway = false;\n  React.useEffect(() => {\n    ///Finds weather data of certain location\n    fetch(`https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${loc.loc}&aqi=no`).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      if (data != null) {\n        //Only change currentWeather when there is data for it\n        setCurrentWeather(data);\n      } else {\n        alert(`${loc.loc} was not found`);\n      }\n    });\n  }, [loc.loc]);\n  React.useEffect(() => {\n    ///Finds locations with search bar\n    fetch(`https://api.weatherapi.com/v1/search.json?key=${apiKey}&q=${inputData.loc}&aqi=no`).then(res => res.json()).then(data => {\n      setListOfLoc(data.slice(0, 5));\n\n      if (data.loc == null) {} else {\n        setLoc(data);\n      }\n    }); // dropdownBoolean = true\n    // console.log(dropdownBoolean)\n  }, [inputData.loc]);\n  React.useEffect(() => {\n    setListening(true);\n  }, [throwAway]);\n\n  function appClicked() {\n    setListening(false);\n  }\n\n  console.log(listening);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      setListening: setListening,\n      listening: listening,\n      loc: loc,\n      currentWeather: currentWeather,\n      listOfLoc: listOfLoc,\n      inputData: inputData,\n      setLoc: setLoc,\n      setInputData: setInputData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: appClicked,\n      children: /*#__PURE__*/_jsxDEV(Weather, {\n        setListening: setListening,\n        loc: loc,\n        currentWeather: currentWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XDJqArPKHqLFtVAGJ4zmlMWPbfg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jacob/Code/weather-app/src/App.js"],"names":["React","Navbar","useState","useRef","Weather","App","inputData","setInputData","currentWeather","setCurrentWeather","loc","setLoc","listOfLoc","setListOfLoc","listening","setListening","apiKey","throwAway","useEffect","fetch","then","res","ok","json","data","alert","slice","appClicked","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,QAAR,EAAkBC,MAAlB,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CACA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC;AAACQ,IAAAA,GAAG,EAAC;AAAL,GAAD,CAA9B;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,MAAIc,MAAM,GAAG,iCAAb;AACA,MAAIC,SAAS,GAAG,KAAhB;AAGAjB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAK;AAAC;AACpBC,IAAAA,KAAK,CAAE,mDAAkDH,MAAO,MAAKN,GAAG,CAACA,GAAI,SAAxE,CAAL,CACCU,IADD,CACMC,GAAG,IAAI;AACX,UAAGA,GAAG,CAACC,EAAP,EAAU;AACR,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;AACF,KALD,EAOCH,IAPD,CAOMI,IAAI,IAAI;AACZ,UAAGA,IAAI,IAAG,IAAV,EAAe;AAAC;AACdf,QAAAA,iBAAiB,CAACe,IAAD,CAAjB;AACD,OAFD,MAEK;AACHC,QAAAA,KAAK,CAAE,GAAEf,GAAG,CAACA,GAAI,gBAAZ,CAAL;AACD;AACF,KAbD;AAcD,GAfD,EAeG,CAACA,GAAG,CAACA,GAAL,CAfH;AAiBAV,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAK;AAAC;AACpBC,IAAAA,KAAK,CAAE,iDAAgDH,MAAO,MAAKV,SAAS,CAACI,GAAI,SAA5E,CAAL,CACCU,IADD,CACMC,GAAG,IAAIA,GAAG,CAACE,IAAJ,EADb,EAECH,IAFD,CAEMI,IAAI,IAAI;AACZX,MAAAA,YAAY,CAACW,IAAI,CAACE,KAAL,CAAW,CAAX,EAAa,CAAb,CAAD,CAAZ;;AAEA,UAAGF,IAAI,CAACd,GAAL,IAAY,IAAf,EAAoB,CACnB,CADD,MACK;AACHC,QAAAA,MAAM,CAACa,IAAD,CAAN;AACD;AACF,KATD,EADmB,CAWnB;AACA;AACD,GAbD,EAaG,CAAClB,SAAS,CAACI,GAAX,CAbH;AAeAV,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAK;AACnBH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD,EAEG,CAACE,SAAD,CAFH;;AAKA,WAASU,UAAT,GAAqB;AACnBZ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AACDa,EAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEC,YAAtB;AAAoC,MAAA,SAAS,EAAED,SAA/C;AAA0D,MAAA,GAAG,EAAEJ,GAA/D;AAAoE,MAAA,cAAc,EAAEF,cAApF;AAAoG,MAAA,SAAS,EAAEI,SAA/G;AAA0H,MAAA,SAAS,EAAEN,SAArI;AAAgJ,MAAA,MAAM,EAAEK,MAAxJ;AAAgK,MAAA,YAAY,EAAEJ;AAA9K;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,OAAO,EAAEoB,UAAd;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,YAAY,EAAEZ,YAAvB;AAAqC,QAAA,GAAG,EAAEL,GAA1C;AAA+C,QAAA,cAAc,EAAEF;AAA/D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA5DQH,G;;KAAAA,G;AA8DT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport './index.css';\nimport Navbar from \"./components/Navbar\"\nimport {useState, useRef} from \"react\"\nimport Weather from './components/Weather';\n// import listenForOutsideClick from './components/listenForOutsideClick';\n\nfunction App() {\n  const [inputData, setInputData] = useState({})\n  const [currentWeather, setCurrentWeather] = useState({})\n  const [loc, setLoc] = useState({loc:\"Arlington\"})\n  const [listOfLoc, setListOfLoc] = useState([])\n  const [listening, setListening] = useState(false)\n  let apiKey = \"7ab98e97faa64c4d8b4104902222202\"\n  let throwAway = false\n\n\n  React.useEffect(() =>{///Finds weather data of certain location\n    fetch(`https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${loc.loc}&aqi=no`)\n    .then(res => {\n      if(res.ok){\n        return res.json()\n      }\n    })\n    \n    .then(data => {\n      if(data !=null){//Only change currentWeather when there is data for it\n        setCurrentWeather(data)\n      }else{\n        alert(`${loc.loc} was not found`)\n      }\n    })\n  }, [loc.loc])\n\n  React.useEffect(() =>{///Finds locations with search bar\n    fetch(`https://api.weatherapi.com/v1/search.json?key=${apiKey}&q=${inputData.loc}&aqi=no`)\n    .then(res => res.json())\n    .then(data => {\n      setListOfLoc(data.slice(0,5))\n      \n      if(data.loc == null){\n      }else{\n        setLoc(data)\n      }\n    })\n    // dropdownBoolean = true\n    // console.log(dropdownBoolean)\n  }, [inputData.loc])\n\n  React.useEffect(() =>{\n    setListening(true)\n  }, [throwAway])\n\n\n  function appClicked(){\n    setListening(false)\n  }\n  console.log(listening)\n\n  return (\n    <div className=\"App\">\n      <Navbar setListening={setListening} listening={listening} loc={loc} currentWeather={currentWeather} listOfLoc={listOfLoc} inputData={inputData} setLoc={setLoc} setInputData={setInputData}/>\n      <div onClick={appClicked}>\n        <Weather setListening={setListening} loc={loc} currentWeather={currentWeather}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}