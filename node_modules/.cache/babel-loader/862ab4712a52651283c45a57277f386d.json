{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Code/weather-app/src/components/LocationDropdown.js\";\nimport { useEffect, useState, useRef } from \"react\";\nimport LocationDropdownElement from \"./LocationDropdownElement\";\nimport onClickOutside from \"react-onclickoutside\";\nimport listenForOutsideClick from \"./listenForOutsideClick\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LocationDropdown(props) {\n  // const [isOpen, setIsOpen] = useState(false);\n  // const toggle = () => setIsOpen(!isOpen)\n  // const menuRef = useRef(null)\n  // useEffect(listenForOutsideClick(listening, setListening, menuRef, setIsOpen));\n  ///if(props.dropdownBoolean){\n  const allDropdownElements = props.listOfLoc.map(locationData => {\n    return (\n      /*#__PURE__*/\n      // <p onClick={onDropdownClick} className=\"location-dropdown-element\">{locationData.name}, {locationData.region}</p>\n      _jsxDEV(LocationDropdownElement, {\n        name: locationData.name,\n        region: locationData.region\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    );\n  }); ///}\n  // onClickOutside = evt =>{\n  //     document.getElementsByClassName(\"location-dropdown\").style.display = \"none\"\n  // }\n\n  function onDropdownClick() {// console.log(this.name)\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.listening ? \"location-dropdown\" : \"none\",\n    children: allDropdownElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c = LocationDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationDropdown\");","map":{"version":3,"sources":["/home/jacob/Code/weather-app/src/components/LocationDropdown.js"],"names":["useEffect","useState","useRef","LocationDropdownElement","onClickOutside","listenForOutsideClick","LocationDropdown","props","allDropdownElements","listOfLoc","map","locationData","name","region","onDropdownClick","listening"],"mappings":";AAAA,SAAQA,SAAR,EAAmBC,QAAnB,EAA6BC,MAA7B,QAA0C,OAA1C;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAgC;AAC3C;AACA;AACA;AAEA;AAEA;AACI,QAAMC,mBAAmB,GAAGD,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoBC,YAAY,IAAG;AAC3D;AAAA;AACI;AACA,cAAC,uBAAD;AAAyB,QAAA,IAAI,EAAEA,YAAY,CAACC,IAA5C;AAAkD,QAAA,MAAM,EAAED,YAAY,CAACE;AAAvE;AAAA;AAAA;AAAA;AAAA;AAFJ;AAKH,GAN2B,CAA5B,CARuC,CAe3C;AAEA;AACA;AACA;;AAEA,WAASC,eAAT,GAA0B,CACtB;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAEP,KAAK,CAACQ,SAAN,GAAkB,mBAAlB,GAAwC,MAAxD;AAAA,cACKP;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KA9BuBF,gB","sourcesContent":["import {useEffect, useState, useRef} from \"react\"\nimport LocationDropdownElement from \"./LocationDropdownElement\"\nimport onClickOutside from \"react-onclickoutside\"\nimport listenForOutsideClick from \"./listenForOutsideClick\"\n\nexport default function LocationDropdown(props){\n    // const [isOpen, setIsOpen] = useState(false);\n    // const toggle = () => setIsOpen(!isOpen)\n    // const menuRef = useRef(null)\n\n    // useEffect(listenForOutsideClick(listening, setListening, menuRef, setIsOpen));\n\n    ///if(props.dropdownBoolean){\n        const allDropdownElements = props.listOfLoc.map(locationData =>{\n            return(\n                // <p onClick={onDropdownClick} className=\"location-dropdown-element\">{locationData.name}, {locationData.region}</p>\n                <LocationDropdownElement name={locationData.name} region={locationData.region}/>\n                )\n\n        })        \n    ///}\n\n    // onClickOutside = evt =>{\n    //     document.getElementsByClassName(\"location-dropdown\").style.display = \"none\"\n    // }\n\n    function onDropdownClick(){\n        // console.log(this.name)\n    }\n\n    return(\n        <div className={props.listening ? \"location-dropdown\" : \"none\"}>\n            {allDropdownElements}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}