{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Code/weather-app/src/components/LocationDropdown.js\";\nimport { useEffect, useState, useRef } from \"react\";\nimport LocationDropdownElement from \"./LocationDropdownElement\";\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LocationDropdown(props) {\n  const allDropdownElements = props.listOfLoc.map(locationData => {\n    return /*#__PURE__*/_jsxDEV(LocationDropdownElement, {\n      name: locationData.name,\n      region: locationData.region\n    }, uuid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.listening ? \"location-dropdown\" : \"none\",\n    children: allDropdownElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_c = LocationDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationDropdown\");","map":{"version":3,"sources":["/home/jacob/Code/weather-app/src/components/LocationDropdown.js"],"names":["useEffect","useState","useRef","LocationDropdownElement","v4","uuid","LocationDropdown","props","allDropdownElements","listOfLoc","map","locationData","name","region","listening"],"mappings":";AAAA,SAAQA,SAAR,EAAmBC,QAAnB,EAA6BC,MAA7B,QAA0C,OAA1C;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAgC;AACvC,QAAMC,mBAAmB,GAAGD,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoBC,YAAY,IAAG;AAC3D,wBACI,QAAC,uBAAD;AAAyB,MAAA,IAAI,EAAEA,YAAY,CAACC,IAA5C;AAAkD,MAAA,MAAM,EAAED,YAAY,CAACE;AAAvE,OAAoFR,IAAI,EAAxF;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH,GAL2B,CAA5B;AAQJ,sBACI;AAAK,IAAA,SAAS,EAAEE,KAAK,CAACO,SAAN,GAAkB,mBAAlB,GAAwC,MAAxD;AAAA,cACKN;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KAduBF,gB","sourcesContent":["import {useEffect, useState, useRef} from \"react\"\nimport LocationDropdownElement from \"./LocationDropdownElement\"\nimport {v4 as uuid} from \"uuid\"\n\nexport default function LocationDropdown(props){\n        const allDropdownElements = props.listOfLoc.map(locationData =>{\n            return(\n                <LocationDropdownElement name={locationData.name} region={locationData.region} key={uuid()} />\n            )\n\n        })        \n\n\n    return(\n        <div className={props.listening ? \"location-dropdown\" : \"none\"}>\n            {allDropdownElements}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}