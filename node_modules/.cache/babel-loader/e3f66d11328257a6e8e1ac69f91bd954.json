{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Code/weather-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './index.css';\nimport Navbar from \"./components/Navbar\";\nimport { useState } from \"react\";\nimport Weather from './components/Weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [inputData, setInputData] = useState({});\n  const [currentWeather, setCurrentWeather] = useState({});\n  const [loc, setLoc] = useState({\n    loc: \"Arlington\"\n  });\n  const [listOfLoc, setListOfLoc] = useState([]);\n  let apiKey = \"7ab98e97faa64c4d8b4104902222202\";\n  let dropdownBoolean = true; // console.log(\"Location: \" + loc.loc)\n  // console.log(inputData.loc)\n  // console.log(listOfLoc)\n\n  React.useEffect(() => {\n    ///Finds weather data of certain location\n    fetch(`https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${loc.loc}&aqi=no`).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      if (data != null) {\n        //Only change currentWeather when there is data for it\n        setCurrentWeather(data);\n      } else {\n        alert(`${loc.loc} was not found`);\n      }\n    });\n  }, [loc.loc]);\n  React.useEffect(() => {\n    ///Finds locations with search bar\n    fetch(`https://api.weatherapi.com/v1/search.json?key=${apiKey}&q=${inputData.loc}&aqi=no`).then(res => res.json()).then(data => {\n      dropdownBoolean = true;\n      console.log(dropdownBoolean);\n      setListOfLoc(data.slice(0, 5));\n\n      if (data.loc == null) {} else {\n        setLoc(data);\n      }\n    }); // dropdownBoolean = true\n    // console.log(dropdownBoolean)\n  }, [inputData.loc]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      dropdownBoolean: dropdownBoolean,\n      loc: loc,\n      currentWeather: currentWeather,\n      listOfLoc: listOfLoc,\n      inputData: inputData,\n      setLoc: setLoc,\n      setInputData: setInputData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Weather, {\n      dropdownBoolean: dropdownBoolean,\n      loc: loc,\n      currentWeather: currentWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DAa3u7CDs+9j6sUDj2Lv2MhNGf8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jacob/Code/weather-app/src/App.js"],"names":["React","Navbar","useState","Weather","App","inputData","setInputData","currentWeather","setCurrentWeather","loc","setLoc","listOfLoc","setListOfLoc","apiKey","dropdownBoolean","useEffect","fetch","then","res","ok","json","data","alert","console","log","slice"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC;AAACO,IAAAA,GAAG,EAAC;AAAL,GAAD,CAA9B;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAIW,MAAM,GAAG,iCAAb;AACA,MAAIC,eAAe,GAAG,IAAtB,CANa,CAOb;AACA;AACA;;AAEAd,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAK;AAAC;AACpBC,IAAAA,KAAK,CAAE,mDAAkDH,MAAO,MAAKJ,GAAG,CAACA,GAAI,SAAxE,CAAL,CACCQ,IADD,CACMC,GAAG,IAAI;AACX,UAAGA,GAAG,CAACC,EAAP,EAAU;AACR,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;AACF,KALD,EAOCH,IAPD,CAOMI,IAAI,IAAI;AACZ,UAAGA,IAAI,IAAG,IAAV,EAAe;AAAC;AACdb,QAAAA,iBAAiB,CAACa,IAAD,CAAjB;AACD,OAFD,MAEK;AACHC,QAAAA,KAAK,CAAE,GAAEb,GAAG,CAACA,GAAI,gBAAZ,CAAL;AACD;AACF,KAbD;AAcD,GAfD,EAeG,CAACA,GAAG,CAACA,GAAL,CAfH;AAiBAT,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAK;AAAC;AACpBC,IAAAA,KAAK,CAAE,iDAAgDH,MAAO,MAAKR,SAAS,CAACI,GAAI,SAA5E,CAAL,CACCQ,IADD,CACMC,GAAG,IAAIA,GAAG,CAACE,IAAJ,EADb,EAECH,IAFD,CAEMI,IAAI,IAAI;AACZP,MAAAA,eAAe,GAAG,IAAlB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYV,eAAZ;AAEAF,MAAAA,YAAY,CAACS,IAAI,CAACI,KAAL,CAAW,CAAX,EAAa,CAAb,CAAD,CAAZ;;AAEA,UAAGJ,IAAI,CAACZ,GAAL,IAAY,IAAf,EAAoB,CACnB,CADD,MACK;AACHC,QAAAA,MAAM,CAACW,IAAD,CAAN;AACD;AACF,KAZD,EADmB,CAcnB;AACA;AACD,GAhBD,EAgBG,CAAChB,SAAS,CAACI,GAAX,CAhBH;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,eAAe,EAAEK,eAAzB;AAA0C,MAAA,GAAG,EAAEL,GAA/C;AAAoD,MAAA,cAAc,EAAEF,cAApE;AAAoF,MAAA,SAAS,EAAEI,SAA/F;AAA0G,MAAA,SAAS,EAAEN,SAArH;AAAgI,MAAA,MAAM,EAAEK,MAAxI;AAAgJ,MAAA,YAAY,EAAEJ;AAA9J;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,eAAe,EAAEQ,eAA1B;AAA2C,MAAA,GAAG,EAAEL,GAAhD;AAAqD,MAAA,cAAc,EAAEF;AAArE;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAvDQH,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport './index.css';\nimport Navbar from \"./components/Navbar\"\nimport {useState} from \"react\"\nimport Weather from './components/Weather';\n\n\nfunction App() {\n  const [inputData, setInputData] = useState({})\n  const [currentWeather, setCurrentWeather] = useState({})\n  const [loc, setLoc] = useState({loc:\"Arlington\"})\n  const [listOfLoc, setListOfLoc] = useState([])\n  let apiKey = \"7ab98e97faa64c4d8b4104902222202\"\n  let dropdownBoolean = true\n  // console.log(\"Location: \" + loc.loc)\n  // console.log(inputData.loc)\n  // console.log(listOfLoc)\n\n  React.useEffect(() =>{///Finds weather data of certain location\n    fetch(`https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${loc.loc}&aqi=no`)\n    .then(res => {\n      if(res.ok){\n        return res.json()\n      }\n    })\n    \n    .then(data => {\n      if(data !=null){//Only change currentWeather when there is data for it\n        setCurrentWeather(data)\n      }else{\n        alert(`${loc.loc} was not found`)\n      }\n    })\n  }, [loc.loc])\n\n  React.useEffect(() =>{///Finds locations with search bar\n    fetch(`https://api.weatherapi.com/v1/search.json?key=${apiKey}&q=${inputData.loc}&aqi=no`)\n    .then(res => res.json())\n    .then(data => {\n      dropdownBoolean = true\n      console.log(dropdownBoolean)\n\n      setListOfLoc(data.slice(0,5))\n\n      if(data.loc == null){\n      }else{\n        setLoc(data)\n      }\n    })\n    // dropdownBoolean = true\n    // console.log(dropdownBoolean)\n  }, [inputData.loc])\n\n\n\n\n  return (\n    <div className=\"App\">\n      <Navbar dropdownBoolean={dropdownBoolean} loc={loc} currentWeather={currentWeather} listOfLoc={listOfLoc} inputData={inputData} setLoc={setLoc} setInputData={setInputData}/>\n      <Weather dropdownBoolean={dropdownBoolean} loc={loc} currentWeather={currentWeather}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}