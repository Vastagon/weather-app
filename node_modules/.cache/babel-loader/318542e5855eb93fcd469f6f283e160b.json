{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Code/weather-app/src/components/LocationDropdown.js\";\nimport { useEffect, useState, useRef } from \"react\";\nimport LocationDropdownElement from \"./LocationDropdownElement\";\nimport onClickOutside from \"react-onclickoutside\";\nimport listenForOutsideClick from \"./listenForOutsideClick\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LocationDropdown(props) {\n  // const [isOpen, setIsOpen] = useState(false);\n  // const toggle = () => setIsOpen(!isOpen)\n  // const menuRef = useRef(null)\n  // useEffect(listenForOutsideClick(listening, setListening, menuRef, setIsOpen));\n  ///if(props.dropdownBoolean){\n  const allDropdownElements = props.listOfLoc.map(locationData => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: onDropdownClick,\n      className: \"location-dropdown-element\",\n      children: [locationData.name, \", \", locationData.region]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this);\n  }); ///}\n  // onClickOutside = evt =>{\n  //     document.getElementsByClassName(\"location-dropdown\").style.display = \"none\"\n  // }\n\n  function onDropdownClick() {\n    console.log(\"HElp\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.listening ? \"location-dropdown\" : \"none\",\n    children: allDropdownElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_c = LocationDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationDropdown\");","map":{"version":3,"sources":["/home/jacob/Code/weather-app/src/components/LocationDropdown.js"],"names":["useEffect","useState","useRef","LocationDropdownElement","onClickOutside","listenForOutsideClick","LocationDropdown","props","allDropdownElements","listOfLoc","map","locationData","onDropdownClick","name","region","console","log","listening"],"mappings":";AAAA,SAAQA,SAAR,EAAmBC,QAAnB,EAA6BC,MAA7B,QAA0C,OAA1C;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAgC;AAC3C;AACA;AACA;AAEA;AAEA;AACI,QAAMC,mBAAmB,GAAGD,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoBC,YAAY,IAAG;AAC3D,wBACI;AAAG,MAAA,OAAO,EAAEC,eAAZ;AAA6B,MAAA,SAAS,EAAC,2BAAvC;AAAA,iBAAoED,YAAY,CAACE,IAAjF,QAAyFF,YAAY,CAACG,MAAtG;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH,GAL2B,CAA5B,CARuC,CAc3C;AAEA;AACA;AACA;;AAEA,WAASF,eAAT,GAA0B;AACtBG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAET,KAAK,CAACU,SAAN,GAAkB,mBAAlB,GAAwC,MAAxD;AAAA,cACKT;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KA7BuBF,gB","sourcesContent":["import {useEffect, useState, useRef} from \"react\"\nimport LocationDropdownElement from \"./LocationDropdownElement\"\nimport onClickOutside from \"react-onclickoutside\"\nimport listenForOutsideClick from \"./listenForOutsideClick\"\n\nexport default function LocationDropdown(props){\n    // const [isOpen, setIsOpen] = useState(false);\n    // const toggle = () => setIsOpen(!isOpen)\n    // const menuRef = useRef(null)\n\n    // useEffect(listenForOutsideClick(listening, setListening, menuRef, setIsOpen));\n\n    ///if(props.dropdownBoolean){\n        const allDropdownElements = props.listOfLoc.map(locationData =>{\n            return(\n                <p onClick={onDropdownClick} className=\"location-dropdown-element\">{locationData.name}, {locationData.region}</p>\n            )\n\n        })        \n    ///}\n\n    // onClickOutside = evt =>{\n    //     document.getElementsByClassName(\"location-dropdown\").style.display = \"none\"\n    // }\n\n    function onDropdownClick(){\n        console.log(\"HElp\")\n    }\n\n    return(\n        <div className={props.listening ? \"location-dropdown\" : \"none\"}>\n            {allDropdownElements}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}